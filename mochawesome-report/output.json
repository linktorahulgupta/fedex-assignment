{
  "stats": {
    "suites": 4,
    "tests": 9,
    "passes": 8,
    "pending": 0,
    "failures": 1,
    "start": "2022-01-20T21:25:28.976Z",
    "end": "2022-01-20T21:25:52.456Z",
    "duration": 23480,
    "testsRegistered": 9,
    "passPercent": 88.88888888888889,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "62876d8c-7311-40e5-9704-a04da0029c79",
      "title": "",
      "fullFile": "cypress/integration/e2e/characterSearchTests.js",
      "file": "cypress/integration/e2e/characterSearchTests.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "e700e4b5-0c1d-4521-bbaa-49cf01d074b0",
          "title": "Service availability Test suite",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Check star wars API status is 200",
              "fullTitle": "Service availability Test suite Check star wars API status is 200",
              "timedOut": null,
              "duration": 7166,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const response = cy.request('GET', swapiBaseURL);\nresponse.its('status').should('be.eql', 200);",
              "err": {},
              "uuid": "2f55b360-ff38-41b3-8a91-1d2ba0a3e165",
              "parentUUID": "e700e4b5-0c1d-4521-bbaa-49cf01d074b0",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "2f55b360-ff38-41b3-8a91-1d2ba0a3e165"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 7166,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "c482f54c-9451-41d4-8eec-9949a51ccace",
          "title": "Character Search Test suite",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verify search results (using click event) for a character - with multiple results",
              "fullTitle": "Character Search Test suite Verify search results (using click event) for a character - with multiple results",
              "timedOut": null,
              "duration": 2608,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "searchFormObject.checkRadioButton(searchType).should('be.checked');\nsearchFormObject.inputSearchQuery(searchQuery);\ncy.interceptUntilResults(searchFormObject, swapiBaseURL, searchType, searchQuery, eventType);\nif (description === \"which doesn't exist\") {\n  mainAppObject.isNotFound().should('exist');\n} else {\n  characterSearchResultObject.getCharachterName().should('have.text', name);\n  characterSearchResultObject.getGenderValue().should('have.text', gender);\n  characterSearchResultObject.getBirthYearValue().should('have.text', birthYear);\n  characterSearchResultObject.getEyeColorValue().should('have.text', eyeColor);\n  characterSearchResultObject.getSkinColorValue().should('have.text', skinColor);\n}",
              "err": {},
              "uuid": "626a43bf-1dc2-490b-95f8-e5b26a869194",
              "parentUUID": "c482f54c-9451-41d4-8eec-9949a51ccace",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verify search results (using click event) for a character - where charachter name that has special charachter and gender is NA",
              "fullTitle": "Character Search Test suite Verify search results (using click event) for a character - where charachter name that has special charachter and gender is NA",
              "timedOut": null,
              "duration": 867,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "searchFormObject.checkRadioButton(searchType).should('be.checked');\nsearchFormObject.inputSearchQuery(searchQuery);\ncy.interceptUntilResults(searchFormObject, swapiBaseURL, searchType, searchQuery, eventType);\nif (description === \"which doesn't exist\") {\n  mainAppObject.isNotFound().should('exist');\n} else {\n  characterSearchResultObject.getCharachterName().should('have.text', name);\n  characterSearchResultObject.getGenderValue().should('have.text', gender);\n  characterSearchResultObject.getBirthYearValue().should('have.text', birthYear);\n  characterSearchResultObject.getEyeColorValue().should('have.text', eyeColor);\n  characterSearchResultObject.getSkinColorValue().should('have.text', skinColor);\n}",
              "err": {},
              "uuid": "92063a4b-8970-40bd-b8cc-64ae76fd99a9",
              "parentUUID": "c482f54c-9451-41d4-8eec-9949a51ccace",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verify search results (using click event) for a character - which doesn't exist",
              "fullTitle": "Character Search Test suite Verify search results (using click event) for a character - which doesn't exist",
              "timedOut": null,
              "duration": 1145,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "searchFormObject.checkRadioButton(searchType).should('be.checked');\nsearchFormObject.inputSearchQuery(searchQuery);\ncy.interceptUntilResults(searchFormObject, swapiBaseURL, searchType, searchQuery, eventType);\nif (description === \"which doesn't exist\") {\n  mainAppObject.isNotFound().should('exist');\n} else {\n  characterSearchResultObject.getCharachterName().should('have.text', name);\n  characterSearchResultObject.getGenderValue().should('have.text', gender);\n  characterSearchResultObject.getBirthYearValue().should('have.text', birthYear);\n  characterSearchResultObject.getEyeColorValue().should('have.text', eyeColor);\n  characterSearchResultObject.getSkinColorValue().should('have.text', skinColor);\n}",
              "err": {},
              "uuid": "3d3e8f84-7bec-4d5f-98d0-08e33120fc57",
              "parentUUID": "c482f54c-9451-41d4-8eec-9949a51ccace",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "626a43bf-1dc2-490b-95f8-e5b26a869194",
            "92063a4b-8970-40bd-b8cc-64ae76fd99a9",
            "3d3e8f84-7bec-4d5f-98d0-08e33120fc57"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 4620,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "fcd37cc7-06ea-415c-9c71-4ac981feb98a",
          "title": "Planet Search Test suite",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verify search results (using click event) for a planet - where population is unknown",
              "fullTitle": "Planet Search Test suite Verify search results (using click event) for a planet - where population is unknown",
              "timedOut": null,
              "duration": 1116,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "searchFormObject.checkRadioButton(searchType).should('be.checked');\nsearchFormObject.inputSearchQuery(searchQuery);\ncy.interceptUntilResults(searchFormObject, swapiBaseURL, searchType, searchQuery, eventType);\nif (description === \"which doesn't exist\") {\n  mainAppObject.isNotFound().should('exist');\n} else {\n  planetSearchResultObject.getPlanetName().should('have.text', name);\n  planetSearchResultObject.getPopulationValue().should('have.text', population);\n  planetSearchResultObject.getClimateValue().should('have.text', climate);\n  planetSearchResultObject.getGravityValue().should('have.text', gravity);\n}",
              "err": {},
              "uuid": "a3d3e633-ac9d-4371-878e-e41fe7dbacff",
              "parentUUID": "fcd37cc7-06ea-415c-9c71-4ac981feb98a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verify search results (using click event) for a planet - which doesn't exist",
              "fullTitle": "Planet Search Test suite Verify search results (using click event) for a planet - which doesn't exist",
              "timedOut": null,
              "duration": 791,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "searchFormObject.checkRadioButton(searchType).should('be.checked');\nsearchFormObject.inputSearchQuery(searchQuery);\ncy.interceptUntilResults(searchFormObject, swapiBaseURL, searchType, searchQuery, eventType);\nif (description === \"which doesn't exist\") {\n  mainAppObject.isNotFound().should('exist');\n} else {\n  planetSearchResultObject.getPlanetName().should('have.text', name);\n  planetSearchResultObject.getPopulationValue().should('have.text', population);\n  planetSearchResultObject.getClimateValue().should('have.text', climate);\n  planetSearchResultObject.getGravityValue().should('have.text', gravity);\n}",
              "err": {},
              "uuid": "2984b4e9-c4b1-4b6f-b820-7aec0c77f66e",
              "parentUUID": "fcd37cc7-06ea-415c-9c71-4ac981feb98a",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "a3d3e633-ac9d-4371-878e-e41fe7dbacff",
            "2984b4e9-c4b1-4b6f-b820-7aec0c77f66e"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1907,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "b368aa9f-3595-46cc-ad6c-098bd3fbf22a",
          "title": "Additional scenarios",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verify previous search result are removed on searching empty input query",
              "fullTitle": "Additional scenarios Verify previous search result are removed on searching empty input query",
              "timedOut": null,
              "duration": 5626,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": "\"../cypress/screenshots/e2e/characterSearchTests.js/Additional scenarios -- Verify previous search result are removed on searching empty input query (failed).png\"",
              "code": "searchFormObject.checkRadioButton(searchType).should('be.checked');\nsearchFormObject.inputSearchQuery(searchQuery);\ncy.interceptUntilResults(searchFormObject, swapiBaseURL, searchType, searchQuery, eventType);\nplanetSearchResultObject.getPlanetName().should('have.text', name);\nplanetSearchResultObject.getPopulationValue().should('have.text', population);\nplanetSearchResultObject.getClimateValue().should('have.text', climate);\nplanetSearchResultObject.getGravityValue().should('have.text', gravity);\nsearchFormObject.clearSearchQuery();\nsearchFormObject.clickSubmitButton();\nplanetSearchResultObject.getPlanetName().should('not.exist');",
              "err": {
                "message": "AssertionError: Timed out retrying after 4000ms: Expected <h6.card-subtitle.mb-2.text-muted> not to exist in the DOM, but it was continuously found.",
                "estack": "AssertionError: Timed out retrying after 4000ms: Expected <h6.card-subtitle.mb-2.text-muted> not to exist in the DOM, but it was continuously found.\n    at Context.eval (http://localhost:4200/__cypress/tests?p=cypress/integration/e2e/characterSearchTests.js:274:46)",
                "diff": null
              },
              "uuid": "34a19e3e-b0a4-4d5b-bd38-19f9a9b83e62",
              "parentUUID": "b368aa9f-3595-46cc-ad6c-098bd3fbf22a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verify \"Not Found\" in place of previous search result on changing the search type",
              "fullTitle": "Additional scenarios Verify \"Not Found\" in place of previous search result on changing the search type",
              "timedOut": null,
              "duration": 1408,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "searchFormObject.checkRadioButton(searchType).should('be.checked');\nsearchFormObject.inputSearchQuery(searchQuery);\ncy.interceptUntilResults(searchFormObject, swapiBaseURL, searchType, searchQuery, eventType);\nplanetSearchResultObject.getPlanetName().should('have.text', name);\nplanetSearchResultObject.getPopulationValue().should('have.text', population);\nplanetSearchResultObject.getClimateValue().should('have.text', climate);\nplanetSearchResultObject.getGravityValue().should('have.text', gravity);\nsearchType = \"people\";\nsearchFormObject.checkRadioButton(searchType).should('be.checked');\ncy.interceptUntilResults(searchFormObject, swapiBaseURL, searchType, searchQuery);\nmainAppObject.isNotFound().should('exist');\nplanetSearchResultObject.getPlanetName().should('not.exist');",
              "err": {},
              "uuid": "6883ecb1-ac1d-4a8a-b117-6b31933bcd8f",
              "parentUUID": "b368aa9f-3595-46cc-ad6c-098bd3fbf22a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verify search results (using enter event) for a planet",
              "fullTitle": "Additional scenarios Verify search results (using enter event) for a planet",
              "timedOut": null,
              "duration": 747,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "searchType = \"planets\";\neventType = \"enter\";\nsearchFormObject.checkRadioButton(searchType).should('be.checked');\nsearchFormObject.inputSearchQuery(searchQuery);\ncy.interceptUntilResults(searchFormObject, swapiBaseURL, searchType, searchQuery, eventType);\nplanetSearchResultObject.getPlanetName().should('have.text', name);\nplanetSearchResultObject.getPopulationValue().should('have.text', population);\nplanetSearchResultObject.getClimateValue().should('have.text', climate);\nplanetSearchResultObject.getGravityValue().should('have.text', gravity);",
              "err": {},
              "uuid": "23e0ca71-7c8c-4477-9144-8edb34aa1866",
              "parentUUID": "b368aa9f-3595-46cc-ad6c-098bd3fbf22a",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "6883ecb1-ac1d-4a8a-b117-6b31933bcd8f",
            "23e0ca71-7c8c-4477-9144-8edb34aa1866"
          ],
          "failures": [
            "34a19e3e-b0a4-4d5b-bd38-19f9a9b83e62"
          ],
          "pending": [],
          "skipped": [],
          "duration": 7781,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "output",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.0.1"
    },
    "marge": {
      "options": {
        "overwrite": true,
        "html": true,
        "json": true,
        "reportFilename": "output"
      },
      "version": "6.0.1"
    }
  }
}